{
  // http://eslint.org/docs/rules/

  "ecmaFeatures": {
    "binaryLiterals": false,                    // enable binary literals
    "blockBindings": false,                     // enable let and const (aka block bindings)
    "defaultParams": false,                     // enable default function parameters
    "forOf": false,                             // enable for-of loops
    "generators": false,                        // enable generators
    "objectLiteralComputedProperties": false,   // enable computed object literal property names
    "objectLiteralDuplicateProperties": false,  // enable duplicate object literal properties in strict mode
    "objectLiteralShorthandMethods": false,     // enable object literal shorthand methods
    "objectLiteralShorthandProperties": false,  // enable object literal shorthand properties
    "octalLiterals": false,                     // enable octal literals
    "regexUFlag": false,                        // enable the regular expression u flag
    "regexYFlag": false,                        // enable the regular expression y flag
    "templateStrings": false,                   // enable template strings
    "unicodeCodePointEscapes": false,           // enable code point escapes
    "jsx": false                                // enable JSX
  },

  "env": {
    "browser": false,     // browser global variables.
    "node": false,        // Node.js global variables and Node.js-specific rules.
    "amd": false,         // defines require() and define() as global variables as per the amd spec.
    "mocha": false,       // adds all of the Mocha testing global variables.
    "jasmine": false,     // adds all of the Jasmine testing global variables for version 1.3 and 2.0.
    "phantomjs": false,   // phantomjs global variables.
    "jquery": false,      // jquery global variables.
    "prototypejs": false, // prototypejs global variables.
    "shelljs": false,     // shelljs global variables.
  },

  "globals": {
    // e.g. "angular": true
    "Ext" : true,
    "wccConsoleLog" : true,
    "alert" : true,
    "COMS" : true,

    "prettyPrint" : true,
    "setTimeout" : true,

    "window" : true,
    "document" : true
  },

  "plugins": [
    // e.g. "react" (must run `npm install eslint-plugin-react` first)
  ],

  "rules": {
    ////////// Possible Errors //////////
    "comma-dangle" : [1, "never"],
    "no-cond-assign" : [1, "always"],
    "no-constant-condition" : 1,
    "no-control-regex" : 1,
    "no-dupe-args" : 1,
    "no-dupe-keys" : 1,
    "no-duplicate-case" : 1,
    "no-empty-character-class" : 1,
    "no-empty" : 1,
    "no-ex-assign" : 1,
    "no-extra-boolean-cast" : 1,
    "no-extra-semi" : 1,
    "no-func-assign" : 1,
    "no-inner-declarations": [1, "both"],
    "no-invalid-regexp" : 1,
    "no-negated-in-lhs" : 1,
    "no-obj-calls" : 1,
    "no-regex-spaces" : 1,
    "no-sparse-arrays" : 1,
    "use-isnan" : 1,
    "valid-typeof" : 1,
    "no-unexpected-multiline" : 1,

    /// Make these errors in production but warnings in dev ///
    "no-console" : 1,
    "no-debugger" : 1,
    "no-alert" : 1,
    "no-extra-parens" : 1,
    "no-irregular-whitespace" : 1,
    "no-unreachable" : 1,
    "valid-jsdoc" : 1,



    ////////// Best Practices //////////
    "block-scoped-var": 1,
    "complexity" : [1, 2],
    "consistent-return": 1,
    "curly": 1,
    "default-case": 1,
    "dot-notation": 1,
    "eqeqeq": 1,
    "guard-for-in": 1,
    "no-alert": 1,
    "no-caller": 1,
    "no-div-regex": 1,
    "no-else-return": 1,
    "no-empty-label": 1,
    "no-eq-null": 1,
    "no-eval": 1,
    "no-extend-native": 1,
    "no-extra-bind": 1,
    "no-fallthrough": 1,
    "no-floating-decimal": 1,
    "no-implied-eval": 1,
    "no-iterator": 1,
    "no-labels": 1,
    "no-lone-blocks": 1,
    "no-loop-func": 1,
    "no-multi-spaces": 1,
    "no-multi-str": 1,
    "no-native-reassign": 1,
    "no-new": 1,
    "no-new-func": 1,
    "no-new-wrappers": 1,
    "no-octal": 1,
    "no-octal-escape": 1,
    "no-process-env": 1,
    "no-proto": 1,
    "no-redeclare": 1,
    "no-return-assign": 1,
    "no-script-url": 1,
    "no-self-compare": 1,
    "no-sequences": 1,
    "no-unused-expressions": 1,
    "no-void": 1,
    "no-warning-comments": [1, { "terms": ["todo", "fixme", "any other term"], "location": "anywhere" }],
    "no-with": 1,
    "radix": 1,
    "wrap-iife": [1, "inside"],
    "yoda" : [1, "never", { "onlyEquality": true }],
    "strict": 0,

    // Variables
    "no-catch-shadow": 1,
    "no-delete-var": 1,
    "no-label-var": 1,
    "no-shadow": 1,
    "no-shadow-restricted-names": 1,
    "no-undef": 1,
    "no-undef-init": 1,
    "no-undefined": 1,
    "no-unused-vars": 1,
    "no-use-before-define" : [1, "nofunc"],

     // Stylistic Issues
    "brace-style": [1, "1tbs", { "allowSingleLine": true }],
    "camelcase": 1,
    "comma-spacing": [1, {"before": false, "after": true}],
    "comma-style": [1, "last"],
    "consistent-this": [1, "self"],
    "eol-last": 0,
    "func-names": 1,
    "func-style": [1, "declaration"],
    "key-spacing": [1, { "beforeColon": false, "afterColon": true}],
    "max-nested-callbacks": [1, 3],
    "new-cap": [1, {"newIsCap": true, "capIsNew": true, "capIsNewExceptions":[
      "Object",
      "Function",
      "Number",
      "String",
      "Boolean",
      "Date",
      "Array",
      "Symbol",
      "RegExp"
    ]}],
    "new-parens": 1,
    "no-array-constructor": 1,
    "no-inline-comments": 1,
    "no-mixed-spaces-and-tabs": 1,
    "no-multiple-empty-lines": [1, {"max": 1}],
    "no-nested-ternary": 1,
    "no-new-object": 1,
    "no-space-before-semi": 1,
    "no-spaced-func": 1,
    "no-underscore-dangle": 1,
    "no-trailing-spaces": 1,
    "no-wrap-func": 1,
    "operator-assignment": [1, "always"],
    "padded-blocks": [1, "never"],
    "quote-props": [1, "as-needed"],
    "quotes": [1, "single", "avoid-escape"],
    "semi": [1, "always"],
    "space-after-function-name": [1, "never"],
    "space-after-keywords": 1,
    "space-before-blocks": 1,
    "space-in-brackets": 1,
    "space-in-parens": 1,
    "space-return-throw-case": 1,
    "space-unary-ops": [1, { "words": true, "nonwords": false }]

  }
}